import comp from "D:/programme/vuepress-blogs/docs/.vuepress/.temp/pages/views/frontend.html.vue"
const data = JSON.parse("{\"path\":\"/views/frontend.html\",\"title\":\"JavaScript 核心概念笔记\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"闭包(closure)\",\"slug\":\"闭包-closure\",\"link\":\"#闭包-closure\",\"children\":[]},{\"level\":2,\"title\":\"构造函数\",\"slug\":\"构造函数\",\"link\":\"#构造函数\",\"children\":[]},{\"level\":2,\"title\":\"原型和原型链\",\"slug\":\"原型和原型链\",\"link\":\"#原型和原型链\",\"children\":[]},{\"level\":2,\"title\":\"事件循环机制\",\"slug\":\"事件循环机制\",\"link\":\"#事件循环机制\",\"children\":[]},{\"level\":2,\"title\":\"栈(Stack)和堆(Heap)\",\"slug\":\"栈-stack-和堆-heap\",\"link\":\"#栈-stack-和堆-heap\",\"children\":[]},{\"level\":2,\"title\":\"模块化规范\",\"slug\":\"模块化规范\",\"link\":\"#模块化规范\",\"children\":[]}],\"git\":{},\"filePathRelative\":\"views/frontend.md\",\"excerpt\":\"\\n<h2>闭包(closure)</h2>\\n<p>闭包是由函数以及声明该函数的词法环境(lexical environment)组合而成的，闭包允许将函数与其所操作的数据（环境变量）所关联。</p>\\n<div class=\\\"language-javascript\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre><code><span class=\\\"line\\\">global<span class=\\\"token punctuation\\\">.</span>Closure <span class=\\\"token comment\\\">// 全局闭包</span></span>\\n<span class=\\\"line\\\">global<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">[</span>Scopes<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">// 全局作用域链</span></span>\\n<span class=\\\"line\\\">global<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">LE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>variable<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// 全局词法环境中的全局变量(variable)和函数(function)</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token function\\\">global</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">LE</span> <span class=\\\"token comment\\\">// 全局作用域中定义的函数内部词法环境</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">[</span>Scopes<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>global<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">LE</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">// 函数作用域链</span></span>\\n<span class=\\\"line\\\"></span></code></pre>\\n</div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
